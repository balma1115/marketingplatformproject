// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/blog/keywords" | "/blog/keywords/monthly" | "/blog/keywords/trend/[keywordId]" | "/dashboard/academy" | "/dashboard/admin" | "/dashboard/admin/organization" | "/dashboard/admin/tracking" | "/dashboard/admin/tracking/[userId]/blog" | "/dashboard/admin/tracking/[userId]/smartplace" | "/dashboard/admin/users" | "/dashboard/ads" | "/dashboard/ads/adgroups/[adgroupId]" | "/dashboard/ads/campaigns/[campaignId]" | "/dashboard/ads/campaigns/[campaignId]/create-adgroup" | "/dashboard/agency" | "/dashboard/agency/tracking" | "/dashboard/agency/tracking/[userId]/blog" | "/dashboard/agency/tracking/[userId]/smartplace" | "/dashboard/branch" | "/dashboard/plan" | "/dashboard/user" | "/diagnosis" | "/diagnosis/smartplace" | "/keyword-analysis" | "/login" | "/management" | "/management/keywords" | "/mypage" | "/register" | "/smartplace/keywords" | "/smartplace/keywords/monthly" | "/smartplace/keywords/trend/[keywordId]" | "/test-sse"
type AppRouteHandlerRoutes = "/api/admin/academies" | "/api/admin/ads-refresh" | "/api/admin/branches" | "/api/admin/csv-upload" | "/api/admin/scheduler" | "/api/admin/subjects" | "/api/admin/tracking" | "/api/admin/tracking/[userId]" | "/api/admin/tracking/sse-fixed" | "/api/admin/tracking/sse-realtime" | "/api/admin/tracking/sse-simple" | "/api/admin/tracking/sse-test" | "/api/admin/tracking/sse-working" | "/api/admin/tracking/status" | "/api/admin/tracking/stream" | "/api/admin/tracking/test-event" | "/api/admin/users" | "/api/admin/users/[userId]" | "/api/admin/users/[userId]/approve" | "/api/ads/adgroups" | "/api/ads/adgroups/[adgroupId]" | "/api/ads/adgroups/[adgroupId]/ad-extensions" | "/api/ads/adgroups/[adgroupId]/ads" | "/api/ads/adgroups/[adgroupId]/extended-search" | "/api/ads/adgroups/[adgroupId]/extensions" | "/api/ads/adgroups/[adgroupId]/keywords" | "/api/ads/adgroups/[adgroupId]/negative-keywords" | "/api/ads/adgroups/[adgroupId]/products" | "/api/ads/adgroups/[adgroupId]/restricted-keywords" | "/api/ads/adgroups/create" | "/api/ads/campaigns" | "/api/ads/campaigns/[campaignId]" | "/api/ads/campaigns/[campaignId]/adgroups" | "/api/ads/campaigns/[campaignId]/toggle" | "/api/ads/campaigns/bulk-delete" | "/api/ads/campaigns/create" | "/api/ads/dashboard" | "/api/ads/keywords" | "/api/ads/keywords/[keywordId]/toggle" | "/api/ads/keywords/stats" | "/api/ads/keywords/suggestions" | "/api/ads/performance" | "/api/ads/places" | "/api/ads/places/naver" | "/api/ads/processed-data" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/me" | "/api/auth/register" | "/api/auth/send-verification" | "/api/auth/test-login" | "/api/auth/verify-code" | "/api/blog-keywords/[keywordId]" | "/api/blog-keywords/[keywordId]/toggle" | "/api/blog-keywords/[keywordId]/trend" | "/api/blog-keywords/add" | "/api/blog-keywords/clear-all" | "/api/blog-keywords/list" | "/api/blog-keywords/monthly-data" | "/api/blog-keywords/my-blog" | "/api/blog-keywords/projects" | "/api/blog-keywords/register-blog" | "/api/blog-keywords/track-all" | "/api/blog-keywords/update-blog" | "/api/focus-keywords/[source]/[keywordId]" | "/api/focus-keywords/add-to-blog" | "/api/focus-keywords/add-to-smartplace" | "/api/focus-keywords/unified" | "/api/keyword-analysis" | "/api/public/academies" | "/api/public/branches" | "/api/public/subjects" | "/api/scheduler/init" | "/api/settings/api-keys" | "/api/smartplace-keywords/[keywordId]" | "/api/smartplace-keywords/[keywordId]/toggle" | "/api/smartplace-keywords/[keywordId]/trend" | "/api/smartplace-keywords/add" | "/api/smartplace-keywords/list" | "/api/smartplace-keywords/monthly-data" | "/api/smartplace-keywords/my-place" | "/api/smartplace-keywords/projects" | "/api/smartplace-keywords/register-place" | "/api/smartplace-keywords/sessions" | "/api/smartplace-keywords/track-all" | "/api/smartplace-keywords/track-all-realtime" | "/api/smartplace-keywords/track-all-v4" | "/api/smartplace/analyze" | "/api/smartplace/diagnosis" | "/api/smartplace/info/[placeId]" | "/api/smartplace/resolve-url" | "/api/test-adgroups-simple" | "/api/user/update-plan"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard" | "/diagnosis"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/admin/academies": {}
  "/api/admin/ads-refresh": {}
  "/api/admin/branches": {}
  "/api/admin/csv-upload": {}
  "/api/admin/scheduler": {}
  "/api/admin/subjects": {}
  "/api/admin/tracking": {}
  "/api/admin/tracking/[userId]": { "userId": string; }
  "/api/admin/tracking/sse-fixed": {}
  "/api/admin/tracking/sse-realtime": {}
  "/api/admin/tracking/sse-simple": {}
  "/api/admin/tracking/sse-test": {}
  "/api/admin/tracking/sse-working": {}
  "/api/admin/tracking/status": {}
  "/api/admin/tracking/stream": {}
  "/api/admin/tracking/test-event": {}
  "/api/admin/users": {}
  "/api/admin/users/[userId]": { "userId": string; }
  "/api/admin/users/[userId]/approve": { "userId": string; }
  "/api/ads/adgroups": {}
  "/api/ads/adgroups/[adgroupId]": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/ad-extensions": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/ads": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/extended-search": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/extensions": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/keywords": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/negative-keywords": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/products": { "adgroupId": string; }
  "/api/ads/adgroups/[adgroupId]/restricted-keywords": { "adgroupId": string; }
  "/api/ads/adgroups/create": {}
  "/api/ads/campaigns": {}
  "/api/ads/campaigns/[campaignId]": { "campaignId": string; }
  "/api/ads/campaigns/[campaignId]/adgroups": { "campaignId": string; }
  "/api/ads/campaigns/[campaignId]/toggle": { "campaignId": string; }
  "/api/ads/campaigns/bulk-delete": {}
  "/api/ads/campaigns/create": {}
  "/api/ads/dashboard": {}
  "/api/ads/keywords": {}
  "/api/ads/keywords/[keywordId]/toggle": { "keywordId": string; }
  "/api/ads/keywords/stats": {}
  "/api/ads/keywords/suggestions": {}
  "/api/ads/performance": {}
  "/api/ads/places": {}
  "/api/ads/places/naver": {}
  "/api/ads/processed-data": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/me": {}
  "/api/auth/register": {}
  "/api/auth/send-verification": {}
  "/api/auth/test-login": {}
  "/api/auth/verify-code": {}
  "/api/blog-keywords/[keywordId]": { "keywordId": string; }
  "/api/blog-keywords/[keywordId]/toggle": { "keywordId": string; }
  "/api/blog-keywords/[keywordId]/trend": { "keywordId": string; }
  "/api/blog-keywords/add": {}
  "/api/blog-keywords/clear-all": {}
  "/api/blog-keywords/list": {}
  "/api/blog-keywords/monthly-data": {}
  "/api/blog-keywords/my-blog": {}
  "/api/blog-keywords/projects": {}
  "/api/blog-keywords/register-blog": {}
  "/api/blog-keywords/track-all": {}
  "/api/blog-keywords/update-blog": {}
  "/api/focus-keywords/[source]/[keywordId]": { "source": string; "keywordId": string; }
  "/api/focus-keywords/add-to-blog": {}
  "/api/focus-keywords/add-to-smartplace": {}
  "/api/focus-keywords/unified": {}
  "/api/keyword-analysis": {}
  "/api/public/academies": {}
  "/api/public/branches": {}
  "/api/public/subjects": {}
  "/api/scheduler/init": {}
  "/api/settings/api-keys": {}
  "/api/smartplace-keywords/[keywordId]": { "keywordId": string; }
  "/api/smartplace-keywords/[keywordId]/toggle": { "keywordId": string; }
  "/api/smartplace-keywords/[keywordId]/trend": { "keywordId": string; }
  "/api/smartplace-keywords/add": {}
  "/api/smartplace-keywords/list": {}
  "/api/smartplace-keywords/monthly-data": {}
  "/api/smartplace-keywords/my-place": {}
  "/api/smartplace-keywords/projects": {}
  "/api/smartplace-keywords/register-place": {}
  "/api/smartplace-keywords/sessions": {}
  "/api/smartplace-keywords/track-all": {}
  "/api/smartplace-keywords/track-all-realtime": {}
  "/api/smartplace-keywords/track-all-v4": {}
  "/api/smartplace/analyze": {}
  "/api/smartplace/diagnosis": {}
  "/api/smartplace/info/[placeId]": { "placeId": string; }
  "/api/smartplace/resolve-url": {}
  "/api/test-adgroups-simple": {}
  "/api/user/update-plan": {}
  "/blog/keywords": {}
  "/blog/keywords/monthly": {}
  "/blog/keywords/trend/[keywordId]": { "keywordId": string; }
  "/dashboard": {}
  "/dashboard/academy": {}
  "/dashboard/admin": {}
  "/dashboard/admin/organization": {}
  "/dashboard/admin/tracking": {}
  "/dashboard/admin/tracking/[userId]/blog": { "userId": string; }
  "/dashboard/admin/tracking/[userId]/smartplace": { "userId": string; }
  "/dashboard/admin/users": {}
  "/dashboard/ads": {}
  "/dashboard/ads/adgroups/[adgroupId]": { "adgroupId": string; }
  "/dashboard/ads/campaigns/[campaignId]": { "campaignId": string; }
  "/dashboard/ads/campaigns/[campaignId]/create-adgroup": { "campaignId": string; }
  "/dashboard/agency": {}
  "/dashboard/agency/tracking": {}
  "/dashboard/agency/tracking/[userId]/blog": { "userId": string; }
  "/dashboard/agency/tracking/[userId]/smartplace": { "userId": string; }
  "/dashboard/branch": {}
  "/dashboard/plan": {}
  "/dashboard/user": {}
  "/diagnosis": {}
  "/diagnosis/smartplace": {}
  "/keyword-analysis": {}
  "/login": {}
  "/management": {}
  "/management/keywords": {}
  "/mypage": {}
  "/register": {}
  "/smartplace/keywords": {}
  "/smartplace/keywords/monthly": {}
  "/smartplace/keywords/trend/[keywordId]": { "keywordId": string; }
  "/test-sse": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
  "/diagnosis": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
