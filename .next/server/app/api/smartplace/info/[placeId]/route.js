/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/smartplace/info/[placeId]/route";
exports.ids = ["app/api/smartplace/info/[placeId]/route"];
exports.modules = {

/***/ "(rsc)/./app/api/smartplace/info/[placeId]/route.ts":
/*!****************************************************!*\
  !*** ./app/api/smartplace/info/[placeId]/route.ts ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_naverMapService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/naverMapService */ \"(rsc)/./lib/services/naverMapService.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_services_naverMapService__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_services_naverMapService__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function GET(req, { params }) {\n    try {\n        const { placeId } = await params;\n        if (!placeId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Place ID가 필요합니다.'\n            }, {\n                status: 400\n            });\n        }\n        console.log('=== SMARTPLACE INFO REQUEST ===');\n        console.log('Place ID:', placeId);\n        const placeInfo = await _lib_services_naverMapService__WEBPACK_IMPORTED_MODULE_1__.naverMapService.getSmartPlaceInfo(placeId);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: placeInfo\n        });\n    } catch (error) {\n        console.error('Error in smartplace info:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || '스마트플레이스 정보 조회 중 오류가 발생했습니다.'\n        }, {\n            status: 500\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NtYXJ0cGxhY2UvaW5mby9bcGxhY2VJZF0vcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVEO0FBQ1M7QUFFekQsZUFBZUUsSUFDcEJDLEdBQWdCLEVBQ2hCLEVBQUVDLE1BQU0sRUFBNEM7SUFFcEQsSUFBSTtRQUNGLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUcsTUFBTUQ7UUFFMUIsSUFBSSxDQUFDQyxTQUFTO1lBQ1osT0FBT0wscURBQVlBLENBQUNNLElBQUksQ0FDdEI7Z0JBQUVDLFNBQVM7Z0JBQU9DLE9BQU87WUFBbUIsR0FDNUM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBQyxRQUFRQyxHQUFHLENBQUM7UUFDWkQsUUFBUUMsR0FBRyxDQUFDLGFBQWFOO1FBRXpCLE1BQU1PLFlBQVksTUFBTVgsMEVBQWVBLENBQUNZLGlCQUFpQixDQUFDUjtRQUUxRCxPQUFPTCxxREFBWUEsQ0FBQ00sSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RPLE1BQU1GO1FBQ1I7SUFDRixFQUFFLE9BQU9KLE9BQVk7UUFDbkJFLFFBQVFGLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE9BQU9SLHFEQUFZQSxDQUFDTSxJQUFJLENBQ3RCO1lBQUVDLFNBQVM7WUFBT0MsT0FBT0EsTUFBTU8sT0FBTyxJQUFJO1FBQThCLEdBQ3hFO1lBQUVOLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFVzZXJcXERvY3VtZW50c1xcR2l0SHViXFxtYXJrZXRpbmdwbGF0Zm9ybXByb2plY3RcXGFwcFxcYXBpXFxzbWFydHBsYWNlXFxpbmZvXFxbcGxhY2VJZF1cXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IG5hdmVyTWFwU2VydmljZSB9IGZyb20gJ0AvbGliL3NlcnZpY2VzL25hdmVyTWFwU2VydmljZSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChcbiAgcmVxOiBOZXh0UmVxdWVzdCxcbiAgeyBwYXJhbXMgfTogeyBwYXJhbXM6IFByb21pc2U8eyBwbGFjZUlkOiBzdHJpbmcgfT4gfVxuKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBwbGFjZUlkIH0gPSBhd2FpdCBwYXJhbXNcbiAgICBcbiAgICBpZiAoIXBsYWNlSWQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdQbGFjZSBJROqwgCDtlYTsmpTtlanri4jri6QuJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgIClcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZygnPT09IFNNQVJUUExBQ0UgSU5GTyBSRVFVRVNUID09PScpXG4gICAgY29uc29sZS5sb2coJ1BsYWNlIElEOicsIHBsYWNlSWQpXG5cbiAgICBjb25zdCBwbGFjZUluZm8gPSBhd2FpdCBuYXZlck1hcFNlcnZpY2UuZ2V0U21hcnRQbGFjZUluZm8ocGxhY2VJZClcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogcGxhY2VJbmZvXG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIHNtYXJ0cGxhY2UgaW5mbzonLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAn7Iqk66eI7Yq47ZSM66CI7J207IqkIOygleuztCDsobDtmowg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6QuJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKVxuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIm5hdmVyTWFwU2VydmljZSIsIkdFVCIsInJlcSIsInBhcmFtcyIsInBsYWNlSWQiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwic3RhdHVzIiwiY29uc29sZSIsImxvZyIsInBsYWNlSW5mbyIsImdldFNtYXJ0UGxhY2VJbmZvIiwiZGF0YSIsIm1lc3NhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/smartplace/info/[placeId]/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/naverMapService.ts":
/*!*****************************************!*\
  !*** ./lib/services/naverMapService.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NaverMapService: () => (/* binding */ NaverMapService),\n/* harmony export */   naverMapService: () => (/* binding */ naverMapService)\n/* harmony export */ });\n/* harmony import */ var _playwrightCrawler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./playwrightCrawler */ \"(rsc)/./lib/services/playwrightCrawler.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_playwrightCrawler__WEBPACK_IMPORTED_MODULE_0__]);\n_playwrightCrawler__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass NaverMapService {\n    async getSmartPlaceInfo(placeId) {\n        try {\n            console.log('=== NAVER MAP SERVICE: getSmartPlaceInfo ===');\n            console.log('Place ID:', placeId);\n            // Playwright 크롤러 서비스를 사용하여 정보 가져오기\n            const placeDetail = await _playwrightCrawler__WEBPACK_IMPORTED_MODULE_0__.playwrightCrawlerService.getPlaceDetails(placeId);\n            // SmartPlaceInfo 형식으로 변환\n            const smartPlaceInfo = {\n                id: placeId,\n                name: placeDetail.name || `업체 (ID: ${placeId})`,\n                category: placeDetail.category || '분류 정보 없음',\n                businessHours: placeDetail.businessHours || '영업시간 정보 없음',\n                phone: placeDetail.phone || '',\n                address: placeDetail.address || '',\n                hasReservation: placeDetail.hasReservation,\n                hasInquiry: placeDetail.hasInquiry,\n                hasCoupon: placeDetail.hasCoupon,\n                hasOrder: placeDetail.hasOrder,\n                hasTalk: placeDetail.hasTalk,\n                hasSmartCall: placeDetail.hasSmartCall,\n                tabs: placeDetail.tabs.length > 0 ? placeDetail.tabs : [\n                    '홈'\n                ],\n                description: placeDetail.description || '',\n                images: placeDetail.images || [],\n                amenities: placeDetail.amenities,\n                keywords: placeDetail.keywords,\n                visitorReviewCount: placeDetail.visitorReviewCount,\n                blogReviewCount: placeDetail.blogReviewCount,\n                reviewScore: placeDetail.reviewScore,\n                responseRate: placeDetail.responseRate,\n                directions: placeDetail.directions,\n                blogLink: placeDetail.blogLink,\n                instagramLink: placeDetail.instagramLink,\n                introduction: placeDetail.introduction,\n                representativeKeywords: placeDetail.representativeKeywords,\n                educationInfo: placeDetail.educationInfo,\n                imageRegistrationDates: placeDetail.imageRegistrationDates,\n                hasClipTab: placeDetail.hasClipTab,\n                newsUpdateDates: placeDetail.newsUpdateDates,\n                visitorReviews: placeDetail.visitorReviews,\n                blogReviews: placeDetail.blogReviews,\n                priceDisplay: placeDetail.priceDisplay,\n                hasMenuPhoto: placeDetail.hasMenuPhoto,\n                hasInteriorPhoto: placeDetail.hasInteriorPhoto,\n                hasExteriorPhoto: placeDetail.hasExteriorPhoto,\n                lastPhotoUpdate: placeDetail.lastPhotoUpdate,\n                newsCount: placeDetail.newsCount,\n                lastNewsDate: placeDetail.lastNewsDate,\n                hasEvent: placeDetail.hasEvent,\n                hasNotice: placeDetail.hasNotice\n            };\n            console.log('=== FINAL SMARTPLACE INFO ===');\n            console.log('Extracted info:', JSON.stringify(smartPlaceInfo, null, 2));\n            return smartPlaceInfo;\n        } catch (error) {\n            console.error('Error in getSmartPlaceInfo:', error.message);\n            throw new Error(`스마트플레이스 정보를 가져올 수 없습니다: ${error.message}`);\n        }\n    }\n}\nconst naverMapService = new NaverMapService();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/naverMapService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/services/playwrightCrawler.ts":
/*!*******************************************!*\
  !*** ./lib/services/playwrightCrawler.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PlaywrightCrawlerService: () => (/* binding */ PlaywrightCrawlerService),\n/* harmony export */   playwrightCrawlerService: () => (/* binding */ playwrightCrawlerService)\n/* harmony export */ });\n/* harmony import */ var playwright__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! playwright */ \"playwright\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([playwright__WEBPACK_IMPORTED_MODULE_0__]);\nplaywright__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass PlaywrightCrawlerService {\n    async initialize() {\n        if (!this.browser) {\n            console.log('Initializing Playwright browser...');\n            this.browser = await playwright__WEBPACK_IMPORTED_MODULE_0__.chromium.launch({\n                headless: true,\n                args: [\n                    '--disable-blink-features=AutomationControlled',\n                    '--disable-dev-shm-usage',\n                    '--no-sandbox',\n                    '--disable-web-security',\n                    '--disable-features=VizDisplayCompositor'\n                ]\n            });\n            console.log('Playwright browser initialized');\n        }\n    }\n    async close() {\n        if (this.browser) {\n            await this.browser.close();\n            this.browser = null;\n        }\n    }\n    async getPlaceDetails(placeId) {\n        await this.initialize();\n        const context = await this.browser.newContext({\n            viewport: {\n                width: 1920,\n                height: 1080\n            },\n            locale: 'ko-KR',\n            timezoneId: 'Asia/Seoul',\n            userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'\n        });\n        const page = await context.newPage();\n        try {\n            console.log(`Navigating to place ${placeId}...`);\n            // Normalize URL - always start from home tab regardless of input URL\n            const url = `https://map.naver.com/p/entry/place/${placeId}?placePath=/home`;\n            await page.goto(url, {\n                waitUntil: 'domcontentloaded',\n                timeout: 60000\n            });\n            // Wait for page to load\n            await page.waitForTimeout(5000);\n            // Work with iframe\n            let workingPage = page;\n            const entryIframe = await page.$('#entryIframe');\n            if (entryIframe) {\n                const frame = await entryIframe.contentFrame();\n                if (frame) {\n                    console.log('Working inside iframe');\n                    workingPage = frame;\n                }\n            }\n            // Initialize result object\n            const placeDetail = {\n                name: '',\n                category: '',\n                address: '',\n                phone: '',\n                businessHours: '',\n                description: '',\n                tabs: [],\n                hasReservation: false,\n                hasInquiry: false,\n                hasCoupon: false,\n                hasOrder: false,\n                hasTalk: false,\n                amenities: [],\n                keywords: [],\n                images: [],\n                visitorReviewCount: 0,\n                blogReviewCount: 0,\n                reviewScore: 0,\n                responseRate: '',\n                directions: '',\n                blogLink: '',\n                instagramLink: '',\n                introduction: '',\n                representativeKeywords: [],\n                educationInfo: {\n                    hasRegistrationNumber: false,\n                    hasTuitionFee: false\n                },\n                imageRegistrationDates: [],\n                hasClipTab: false,\n                newsUpdateDates: [],\n                visitorReviews: [],\n                blogReviews: [],\n                hasSmartCall: false,\n                priceDisplay: {\n                    hasText: false,\n                    hasImage: false\n                },\n                hasMenuPhoto: false,\n                hasInteriorPhoto: false,\n                hasExteriorPhoto: false,\n                lastPhotoUpdate: '',\n                newsCount: 0,\n                lastNewsDate: '',\n                hasEvent: false,\n                hasNotice: false\n            };\n            console.log('Collecting basic info from home tab...');\n            // Try to extract business hours from home tab first\n            const homeBusinessSection = await workingPage.$('.O8qbU.pSavy');\n            if (homeBusinessSection) {\n                const businessText = await homeBusinessSection.textContent();\n                if (businessText && businessText.includes('운영')) {\n                    let cleanHours = businessText.replace('펼쳐보기', '').replace('접기', '');\n                    if (businessText.includes('운영 중')) {\n                        if (businessText.includes('21:00') || businessText.includes('21시')) {\n                            placeDetail.businessHours = '운영 중, 21:00에 운영 종료';\n                        } else {\n                            placeDetail.businessHours = cleanHours.substring(0, 200);\n                        }\n                        console.log('Business hours found on home tab:', placeDetail.businessHours);\n                    }\n                }\n            }\n            // Extract category - improved selector\n            const categoryElement = await workingPage.$('span.lnJFt');\n            if (categoryElement) {\n                placeDetail.category = await categoryElement.textContent() || '';\n                console.log('Category found:', placeDetail.category);\n            }\n            // Extract name\n            const nameElement = await workingPage.$('.GHAhO');\n            if (nameElement) {\n                placeDetail.name = await nameElement.textContent() || '';\n            }\n            // Extract address - click expand button and get full address\n            try {\n                const addressExpandButton = await workingPage.$('#app-root > div > div > div:nth-child(6) > div > div:nth-child(2) > div.place_section_content > div > div.O8qbU.AZ9_F > div > div > a > span.rvCSr');\n                if (addressExpandButton) {\n                    console.log('Clicking address expand button...');\n                    await addressExpandButton.click();\n                    await page.waitForTimeout(1000);\n                }\n                // Get address from the expanded section\n                const addressSection = await workingPage.$('#app-root > div > div > div:nth-child(6) > div > div:nth-child(2) > div.place_section_content > div > div.O8qbU.AZ9_F > div');\n                if (addressSection) {\n                    const addressText = await addressSection.textContent();\n                    if (addressText) {\n                        // Extract just the address part (remove '찾아오는길' label if present)\n                        const cleanAddress = addressText.replace('찾아오는길', '').trim();\n                        placeDetail.address = cleanAddress;\n                        console.log('Address found from expanded section:', placeDetail.address);\n                    }\n                }\n            } catch (e) {\n                console.log('Error extracting address:', e.message);\n            }\n            // If address not found, try to extract from business hours text if it contains address\n            if (!placeDetail.address && placeDetail.businessHours) {\n                const addressMatch = placeDetail.businessHours.match(/도로명 주소 : ([^●\\n]*)/);\n                if (addressMatch) {\n                    placeDetail.address = addressMatch[1].trim();\n                    console.log('Address extracted from business hours text:', placeDetail.address);\n                    // Clean up business hours to remove address\n                    const hoursOnlyMatch = placeDetail.businessHours.match(/영업시간[^●]*/);\n                    if (hoursOnlyMatch) {\n                        placeDetail.businessHours = hoursOnlyMatch[0].trim();\n                    }\n                }\n            }\n            // Extract phone and check for SmartCall\n            const phoneElement = await workingPage.$('.xlx7Q');\n            if (phoneElement) {\n                placeDetail.phone = await phoneElement.textContent() || '';\n                // Check if it's a SmartCall number (starts with 0507, 0508, etc.)\n                if (placeDetail.phone.startsWith('0507') || placeDetail.phone.startsWith('0508')) {\n                    placeDetail.hasSmartCall = true;\n                    console.log('SmartCall detected:', placeDetail.phone);\n                }\n            }\n            // Check for price image ON HOME TAB\n            console.log('Checking for price image on home tab...');\n            const homePriceSelectors = [\n                '.O8qbU.tXI2c',\n                '.place_section_content .tXI2c',\n                'div.tXI2c'\n            ];\n            for (const selector of homePriceSelectors){\n                const priceSection = await workingPage.$(selector);\n                if (priceSection) {\n                    // Check if it has images or nested divs (usually means image content)\n                    const hasImages = await priceSection.$$('img');\n                    const hasNestedDiv = await priceSection.$('div > div');\n                    if (hasImages.length > 0 || hasNestedDiv) {\n                        placeDetail.priceDisplay.hasImage = true;\n                        console.log(`Price image found on HOME tab with selector: ${selector}`);\n                        break;\n                    }\n                }\n            }\n            // Check for reservation button\n            const reservationButton = await workingPage.$('span:has-text(\"예약\")');\n            if (reservationButton) {\n                placeDetail.hasReservation = true;\n                console.log('Reservation button found');\n            }\n            // Check for inquiry button\n            const inquiryButton = await workingPage.$('span:has-text(\"문의\")');\n            if (inquiryButton) {\n                placeDetail.hasInquiry = true;\n                console.log('Inquiry button found');\n            }\n            // Extract tabs - filter out navigation items\n            const tabElements = await workingPage.$$('.place_fixed_maintab a');\n            for (const tab of tabElements){\n                const tabName = await tab.textContent();\n                if (tabName && ![\n                    '이전 페이지',\n                    '페이지 닫기',\n                    '이전',\n                    '다음'\n                ].includes(tabName.trim())) {\n                    placeDetail.tabs.push(tabName.trim());\n                }\n            }\n            console.log('Tabs found:', placeDetail.tabs);\n            // Check for coupon\n            placeDetail.hasCoupon = placeDetail.tabs.includes('쿠폰');\n            // Extract visitor and blog review counts\n            const visitorReviewElement = await workingPage.$('span:has-text(\"방문자리뷰\") > a, span:has-text(\"방문자 리뷰\") > a');\n            if (visitorReviewElement) {\n                const text = await visitorReviewElement.textContent();\n                const match = text?.match(/\\d+/);\n                if (match) {\n                    placeDetail.visitorReviewCount = parseInt(match[0]);\n                    console.log('Visitor reviews count:', placeDetail.visitorReviewCount);\n                }\n            }\n            const blogReviewElement = await workingPage.$('span:has-text(\"블로그리뷰\") > a, span:has-text(\"블로그 리뷰\") > a');\n            if (blogReviewElement) {\n                const text = await blogReviewElement.textContent();\n                const match = text?.match(/\\d+/);\n                if (match) {\n                    placeDetail.blogReviewCount = parseInt(match[0]);\n                    console.log('Blog reviews count:', placeDetail.blogReviewCount);\n                }\n            }\n            // Click on info tab if exists\n            console.log('Checking info tab...');\n            const infoTabElement = await workingPage.$('a:has-text(\"정보\")');\n            if (infoTabElement) {\n                await infoTabElement.click();\n                await page.waitForTimeout(3000);\n                // Click 더보기 button if exists\n                const moreButton = await workingPage.$('a:has-text(\"더보기\")');\n                if (moreButton) {\n                    await moreButton.click();\n                    await page.waitForTimeout(1500);\n                }\n                // Get the full info text for parsing - use introduction element\n                let fullInfoText = '';\n                const introTextElement = await workingPage.$('.pvuWY');\n                if (introTextElement) {\n                    fullInfoText = await introTextElement.textContent() || '';\n                    // If text is too long (probably got CSS), clear it\n                    if (fullInfoText.length > 10000) {\n                        console.log('Text too long, likely CSS content. Skipping.');\n                        fullInfoText = '';\n                    } else {\n                        console.log('Got full info text from intro, length:', fullInfoText.length);\n                    }\n                }\n                // Extract introduction\n                const introElement = await workingPage.$('.pvuWY > div');\n                if (introElement) {\n                    placeDetail.introduction = await introElement.textContent() || '';\n                    console.log('Introduction found, length:', placeDetail.introduction.length);\n                }\n                // Extract representative keywords with multiple selectors\n                const keywordSelectors = [\n                    '.bgt3S span',\n                    '.x8JmK',\n                    'span.x8JmK',\n                    '.dNaWM span'\n                ];\n                for (const selector of keywordSelectors){\n                    const keywordElements = await workingPage.$$(selector);\n                    if (keywordElements.length > 0) {\n                        for (const element of keywordElements){\n                            const keyword = await element.textContent();\n                            if (keyword && keyword.trim() && !keyword.includes('더보기') && keyword.length < 50) {\n                                placeDetail.representativeKeywords?.push(keyword.trim());\n                            }\n                        }\n                        if (placeDetail.representativeKeywords && placeDetail.representativeKeywords.length > 0) {\n                            console.log('Keywords found:', placeDetail.representativeKeywords);\n                            break;\n                        }\n                    }\n                }\n                // Extract directions/address\n                const directionsElement = await workingPage.$('[class*=\"directions\"], [class*=\"location\"]');\n                if (directionsElement) {\n                    placeDetail.directions = await directionsElement.textContent() || '';\n                }\n                // Extract price information - check menu/price tab first\n                const priceTabElement = await workingPage.$('a[role=\"tab\"]:has-text(\"가격\"), a[role=\"tab\"]:has-text(\"메뉴\")');\n                if (priceTabElement) {\n                    await priceTabElement.click();\n                    await page.waitForTimeout(2000);\n                    // Check for price text\n                    const priceTextSelectors = [\n                        '.O8qbU.tQX7D',\n                        '.tQX7D',\n                        '.pSJyY',\n                        '.K7RXh',\n                        'text=/원/'\n                    ];\n                    for (const selector of priceTextSelectors){\n                        const element = await workingPage.$(selector);\n                        if (element) {\n                            const text = await element.textContent();\n                            if (text && (text.includes('원') || text.includes('수강') || text.includes('등록'))) {\n                                placeDetail.priceDisplay.hasText = true;\n                                placeDetail.priceDisplay.textContent = text.trim().substring(0, 200);\n                                console.log('Price text found');\n                                break;\n                            }\n                        }\n                    }\n                    // Note: Price images are checked on home tab, not here\n                    // Go back to info tab\n                    const infoTab2 = await workingPage.$('a[role=\"tab\"]:has-text(\"정보\")');\n                    if (infoTab2) {\n                        await infoTab2.click();\n                        await page.waitForTimeout(2000);\n                    }\n                }\n                // Also check if price info is in business hours text\n                if (!placeDetail.priceDisplay?.hasText && placeDetail.businessHours && placeDetail.businessHours.includes('상품')) {\n                    const priceMatch = placeDetail.businessHours.match(/상품[^●]*/);\n                    if (priceMatch && priceMatch[0].includes('원')) {\n                        placeDetail.priceDisplay.hasText = true;\n                        placeDetail.priceDisplay.textContent = priceMatch[0].substring(0, 200);\n                        console.log('Price found in business hours text');\n                    }\n                }\n                // Extract business hours - use more flexible selectors\n                try {\n                    // Try to find and click expand button\n                    const hoursExpandButton = await workingPage.$('.O8qbU.pSavy a:has-text(\"펼쳐보기\"), .O8qbU.pSavy button:has-text(\"펼쳐보기\")');\n                    if (hoursExpandButton) {\n                        console.log('Clicking business hours expand button...');\n                        await hoursExpandButton.click();\n                        await page.waitForTimeout(1000);\n                    }\n                    // Get business hours from the section\n                    const hoursSection = await workingPage.$('.O8qbU.pSavy');\n                    if (hoursSection) {\n                        const hoursText = await hoursSection.textContent();\n                        if (hoursText && hoursText.includes('운영')) {\n                            // Clean up the text\n                            let cleanHours = hoursText;\n                            // Remove expand/collapse buttons text\n                            cleanHours = cleanHours.replace('펼쳐보기', '').replace('접기', '');\n                            // Extract just the operating status and hours\n                            if (hoursText.includes('운영 중')) {\n                                const match = hoursText.match(/운영 중.*?(\\d{1,2}:또는 \\d{1,2}시).*?운영 종료/);\n                                if (match) {\n                                    placeDetail.businessHours = match[0];\n                                } else if (hoursText.includes('21:00') || hoursText.includes('21시')) {\n                                    placeDetail.businessHours = '운영 중, 21:00에 운영 종료';\n                                } else {\n                                    placeDetail.businessHours = cleanHours.substring(0, 200);\n                                }\n                            } else {\n                                placeDetail.businessHours = cleanHours.substring(0, 200);\n                            }\n                            console.log('Business hours found:', placeDetail.businessHours);\n                        }\n                    }\n                } catch (e) {\n                    console.log('Error extracting business hours:', e.message);\n                }\n                // Fallback: Extract from fullInfoText if available\n                if ((!placeDetail.businessHours || placeDetail.businessHours === '영업시간 정보 없음') && fullInfoText && fullInfoText.includes('영업시간')) {\n                    const hoursMatch = fullInfoText.match(/영업시간([^옵션상품]*)/);\n                    if (hoursMatch) {\n                        const hoursText = hoursMatch[1].trim();\n                        // Extract day and time patterns\n                        const dayPattern = /([월화수목금토일])\\s*(\\d{1,2}:\\d{2})\\s*~\\s*(\\d{1,2}:\\d{2})/g;\n                        let businessHours = [];\n                        let match;\n                        while((match = dayPattern.exec(hoursText)) !== null){\n                            businessHours.push(`${match[1]} ${match[2]} ~ ${match[3]}`);\n                        }\n                        if (businessHours.length > 0) {\n                            placeDetail.businessHours = businessHours.join(', ');\n                            console.log('Business hours extracted from fullInfoText:', placeDetail.businessHours);\n                        }\n                    }\n                }\n                // Fallback to element selectors if not found\n                if (!placeDetail.businessHours || placeDetail.businessHours === '영업시간 정보 없음') {\n                    const businessHoursSelectors = [\n                        '.O8qbU.pSavy .A_cdD .i8cJw .H3ua4',\n                        '.A_cdD .H3ua4',\n                        'span.H3ua4'\n                    ];\n                    for (const selector of businessHoursSelectors){\n                        const hoursElement = await workingPage.$(selector);\n                        if (hoursElement) {\n                            const hoursText = await hoursElement.textContent();\n                            if (hoursText && hoursText.includes(':')) {\n                                placeDetail.businessHours = hoursText.trim().substring(0, 200);\n                                console.log('Business hours found from element:', placeDetail.businessHours);\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Extract address from fullInfoText if not already found\n                if (!placeDetail.address && fullInfoText) {\n                    const addressMatch = fullInfoText.match(/도로명 주소\\s*:\\s*([^영업\\n]*)/);\n                    if (addressMatch) {\n                        placeDetail.address = addressMatch[1].trim();\n                        console.log('Address extracted from fullInfoText:', placeDetail.address);\n                    }\n                }\n                // Don't extract keywords from fullInfoText as it may contain CSS/HTML\n                // Keywords should be extracted from specific elements only\n                // Extract price info from fullInfoText or introduction\n                if (!placeDetail.priceDisplay?.hasText) {\n                    if (placeDetail.introduction && placeDetail.introduction.includes('원')) {\n                        placeDetail.priceDisplay.hasText = true;\n                        const priceMatches = placeDetail.introduction.match(/(\\d{3,})원/g);\n                        if (priceMatches && priceMatches.length > 0) {\n                            placeDetail.priceDisplay.textContent = `가격 정보: ${priceMatches.slice(0, 3).join(', ')}`;\n                            console.log('Price found in introduction:', placeDetail.priceDisplay.textContent);\n                        }\n                    } else if (fullInfoText && fullInfoText.includes('원')) {\n                        placeDetail.priceDisplay.hasText = true;\n                        const priceMatches = fullInfoText.match(/(\\d{3,})원/g);\n                        if (priceMatches && priceMatches.length > 0) {\n                            placeDetail.priceDisplay.textContent = `가격 정보: ${priceMatches.slice(0, 3).join(', ')}`;\n                            console.log('Price found in fullInfoText');\n                        }\n                    }\n                }\n            }\n            // Extract image dates from photo tab\n            console.log('Extracting image dates...');\n            const photoTabElement = await workingPage.$('a:has-text(\"사진\")');\n            if (photoTabElement) {\n                await photoTabElement.click();\n                await page.waitForTimeout(3000);\n                // Get first 5 images\n                const imgElements = await workingPage.$$('img[src*=\"phinf.naver.net\"], img[src*=\"search.pstatic.net\"]');\n                const maxImages = Math.min(5, imgElements.length);\n                for(let i = 0; i < maxImages; i++){\n                    const src = await imgElements[i].getAttribute('src');\n                    if (src) {\n                        // Extract date from URL (format: YYYYMMDD)\n                        const dateMatch = src.match(/(\\d{8})/);\n                        if (dateMatch) {\n                            const dateStr = dateMatch[1];\n                            const formattedDate = `${dateStr.substring(0, 4)}-${dateStr.substring(4, 6)}-${dateStr.substring(6, 8)}`;\n                            placeDetail.imageRegistrationDates?.push(formattedDate);\n                        } else {\n                            placeDetail.imageRegistrationDates?.push('날짜 정보 없음');\n                        }\n                    }\n                }\n                console.log('Image dates extracted:', placeDetail.imageRegistrationDates);\n            }\n            // Extract review details\n            console.log('Checking review tab...');\n            const reviewTabElement = await workingPage.$('a:has-text(\"리뷰\")');\n            if (reviewTabElement) {\n                await reviewTabElement.click();\n                await page.waitForTimeout(3000);\n                // Click visitor reviews sub-tab\n                const visitorReviewTab = await workingPage.$('a:has-text(\"방문자\")');\n                if (visitorReviewTab) {\n                    await visitorReviewTab.click();\n                    await page.waitForTimeout(2000);\n                    // Extract visitor reviews (up to 5)\n                    const reviewItems = await workingPage.$$('#_review_list > li');\n                    const maxReviews = Math.min(5, reviewItems.length);\n                    for(let i = 0; i < maxReviews; i++){\n                        const review = reviewItems[i];\n                        // Extract date - look for date pattern\n                        const dateElement = await review.$('[class*=\"date\"], span:has-text(\"년\"), span:has-text(\"월\")');\n                        let date = '';\n                        if (dateElement) {\n                            const dateText = await dateElement.textContent();\n                            // Extract date in format YYYY-MM-DD\n                            const yearMatch = dateText?.match(/(\\d{4})년/);\n                            const monthMatch = dateText?.match(/(\\d{1,2})월/);\n                            const dayMatch = dateText?.match(/(\\d{1,2})일/);\n                            if (yearMatch && monthMatch && dayMatch) {\n                                const year = yearMatch[1];\n                                const month = monthMatch[1].padStart(2, '0');\n                                const day = dayMatch[1].padStart(2, '0');\n                                date = `${year}-${month}-${day}`;\n                            } else {\n                                date = dateText || '';\n                            }\n                        }\n                        // Check for owner reply - more accurate selector\n                        const replyElement = await review.$('.pui__GbW8H7, [class*=\"reply\"], [class*=\"owner\"], [class*=\"answer\"]');\n                        const hasReply = !!replyElement;\n                        placeDetail.visitorReviews?.push({\n                            date: date.trim(),\n                            hasReply\n                        });\n                    }\n                    console.log('Visitor reviews extracted:', placeDetail.visitorReviews);\n                }\n                // Click blog reviews sub-tab\n                const blogReviewTab = await workingPage.$('a:has-text(\"블로그\")');\n                if (blogReviewTab) {\n                    await blogReviewTab.click();\n                    await page.waitForTimeout(2000);\n                    // Click latest sort if available\n                    const latestSortButton = await workingPage.$('a:has-text(\"최신순\")');\n                    if (latestSortButton) {\n                        await latestSortButton.click();\n                        await page.waitForTimeout(1500);\n                    }\n                    // Extract blog reviews - use time elements which work\n                    const blogTimeElements = await workingPage.$$('time');\n                    if (blogTimeElements.length > 0) {\n                        const maxBlogReviews = Math.min(5, blogTimeElements.length);\n                        for(let i = 0; i < maxBlogReviews; i++){\n                            const dateText = await blogTimeElements[i].textContent();\n                            if (dateText) {\n                                // Format: YY.M.D.요일 -> YYYY-MM-DD\n                                const shortDateMatch = dateText.match(/(\\d{2})\\.(\\d{1,2})\\.(\\d{1,2})/);\n                                if (shortDateMatch) {\n                                    const year = '20' + shortDateMatch[1];\n                                    const month = shortDateMatch[2].padStart(2, '0');\n                                    const day = shortDateMatch[3].padStart(2, '0');\n                                    const formattedDate = `${year}-${month}-${day}`;\n                                    placeDetail.blogReviews?.push({\n                                        date: formattedDate,\n                                        title: '',\n                                        author: ''\n                                    });\n                                } else {\n                                    // Try other date formats\n                                    const yearMatch = dateText.match(/(\\d{4})년/);\n                                    const monthMatch = dateText.match(/(\\d{1,2})월/);\n                                    const dayMatch = dateText.match(/(\\d{1,2})일/);\n                                    if (yearMatch && monthMatch && dayMatch) {\n                                        const year = yearMatch[1];\n                                        const month = monthMatch[1].padStart(2, '0');\n                                        const day = dayMatch[1].padStart(2, '0');\n                                        const formattedDate = `${year}-${month}-${day}`;\n                                        placeDetail.blogReviews?.push({\n                                            date: formattedDate,\n                                            title: '',\n                                            author: ''\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                        if (placeDetail.blogReviews && placeDetail.blogReviews.length > 0) {\n                            console.log('Blog review dates extracted from time elements:', placeDetail.blogReviews.map((r)=>typeof r === 'string' ? r : r.date));\n                        }\n                    }\n                    console.log('Blog reviews extracted:', placeDetail.blogReviews);\n                }\n            }\n            // Go back to info tab for social links\n            console.log('Going back to info tab for social links...');\n            const infoTabForLinks = await workingPage.$('a[role=\"tab\"]:has-text(\"정보\")');\n            if (infoTabForLinks) {\n                await infoTabForLinks.click();\n                await page.waitForTimeout(2000);\n            }\n            // Extract social links\n            const blogLinkElement = await workingPage.$('a[href*=\"blog.naver.com\"]');\n            if (blogLinkElement) {\n                placeDetail.blogLink = await blogLinkElement.getAttribute('href') || '';\n                console.log('Blog link found:', placeDetail.blogLink);\n            }\n            // Extract Instagram link - check all possible locations\n            const instagramSelectors = [\n                'a[href*=\"instagram.com\"]',\n                'a[href*=\"instagram\"]',\n                '[class*=\"instagram\"] a',\n                'a:has-text(\"인스타그램\")',\n                '.place_section a[href*=\"instagram\"]'\n            ];\n            for (const selector of instagramSelectors){\n                try {\n                    const instagramLinkElement = await workingPage.$(selector);\n                    if (instagramLinkElement) {\n                        const href = await instagramLinkElement.getAttribute('href');\n                        if (href && href.includes('instagram')) {\n                            placeDetail.instagramLink = href;\n                            console.log('Instagram link found:', placeDetail.instagramLink);\n                            break;\n                        }\n                    }\n                } catch (e) {\n                // Continue to next selector\n                }\n            }\n            // If not found, check all links on page\n            if (!placeDetail.instagramLink) {\n                const allLinks = await workingPage.$$('a');\n                for (const link of allLinks){\n                    const href = await link.getAttribute('href');\n                    if (href && href.includes('instagram')) {\n                        placeDetail.instagramLink = href;\n                        console.log('Instagram link found in all links:', placeDetail.instagramLink);\n                        break;\n                    }\n                }\n            }\n            console.log('=== EXTRACTION COMPLETE ===');\n            console.log('Extracted data summary:', {\n                name: placeDetail.name,\n                category: placeDetail.category,\n                phone: placeDetail.phone,\n                hasSmartCall: placeDetail.hasSmartCall,\n                hasReservation: placeDetail.hasReservation,\n                hasInquiry: placeDetail.hasInquiry,\n                hasCoupon: placeDetail.hasCoupon,\n                introduction: placeDetail.introduction?.substring(0, 100),\n                representativeKeywords: placeDetail.representativeKeywords,\n                visitorReviews: placeDetail.visitorReviews,\n                blogReviews: placeDetail.blogReviews,\n                imageRegistrationDates: placeDetail.imageRegistrationDates,\n                priceInfo: placeDetail.priceDisplay,\n                instagramLink: placeDetail.instagramLink\n            });\n            await context.close();\n            return placeDetail;\n        } catch (error) {\n            console.error('Error during crawling:', error);\n            await context.close();\n            throw error;\n        }\n    }\n    constructor(){\n        this.browser = null;\n    }\n}\nconst playwrightCrawlerService = new PlaywrightCrawlerService();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/services/playwrightCrawler.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&page=%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute.ts&appDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&page=%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute.ts&appDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_User_Documents_GitHub_marketingplatformproject_app_api_smartplace_info_placeId_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/smartplace/info/[placeId]/route.ts */ \"(rsc)/./app/api/smartplace/info/[placeId]/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([C_Users_User_Documents_GitHub_marketingplatformproject_app_api_smartplace_info_placeId_route_ts__WEBPACK_IMPORTED_MODULE_16__]);\nC_Users_User_Documents_GitHub_marketingplatformproject_app_api_smartplace_info_placeId_route_ts__WEBPACK_IMPORTED_MODULE_16__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/smartplace/info/[placeId]/route\",\n        pathname: \"/api/smartplace/info/[placeId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/smartplace/info/[placeId]/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\marketingplatformproject\\\\app\\\\api\\\\smartplace\\\\info\\\\[placeId]\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_User_Documents_GitHub_marketingplatformproject_app_api_smartplace_info_placeId_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/smartplace/info/[placeId]/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&page=%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute.ts&appDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "playwright":
/*!*****************************!*\
  !*** external "playwright" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = import("playwright");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&page=%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmartplace%2Finfo%2F%5BplaceId%5D%2Froute.ts&appDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUser%5CDocuments%5CGitHub%5Cmarketingplatformproject&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();